variables:
  AWS_REGION: us-east-1
  APP_NAME: bitslovers-app
  ENV_NAME: bitslovers-env
  FILE: $CI_COMMIT_REF_NAME-$CI_PIPELINE_ID
  BUCKET: app-versions
  BUCKET_PREFIX: dev/
  AWS_PLATFORM: Python 3.8
  KEY: my-keypair-name
  BUILD_PATH : /builds/greengiant1/Nausicaas-Global-Green-Initiative/buildfile.zip
stages:
  - build
  - validate
  - plan
  - apply
  - deploy
  - destroy
  

image:
  name: hashicorp/terraform:light
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    
before_script:
  - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
  - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  - ls 
  - pwd 


build:
  image: 'gitlab/gitlab-ee:latest'
  stage: build
  script:
    -  apt-get update
    -  apt-cache gencaches
    -  apt-get install -y zip unzip
    - ls
    # - cd ..
    # - ls
    - zip  buildfile.zip -r  ./
    - ls
    - pwd
    - ls
  artifacts:
    paths:
      -  /builds/greengiant1/Nausicaas-Global-Green-Initiative/buildfile.zip

validate:
  stage: validate
  script:
    - cd terraform
    - rm -rf .terraform
    - terraform --version
    - terraform init
    - terraform validate
    
plan:
  stage: plan
  script:
    - cd terraform
    - rm -rf .terraform
    - terraform --version
    - terraform init
    - terraform plan -out "planfile"
  dependencies:
    - validate
  artifacts:
    paths:
      - /builds/greengiant1/Nausicaas-Global-Green-Initiative/terraform/planfile
      
apply:
  stage: apply
  script:
    - cd terraform
    - rm -rf .terraform
    - terraform --version
    - terraform init
    - terraform apply -input=false "planfile"
  dependencies:
    - plan
  when: manual

deploy:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: deploy
  script:
    - cd ..
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region eu-west-1
    - aws s3 cp $BUILD_PATH s3://$s3_bucket_uri
    # - aws elasticbeanstalk create-application-version --application-name GreenGiants --version-label $CI_COMMIT_SHORT_SHA --source-bundle S3Bucket= "websever-opensauce" ,S3Key="buildfile.zip" --auto-create-application
    - aws elasticbeanstalk create-application-version --application-name YourEBSAppName --version-label YourVersionLabel --source-bundle S3Bucket=$s3_bucket_uri,S3Key="buildfile.zip"
    - aws elasticbeanstalk update-environment --application-name YourEBSAppName --environment-name YourEBSEnvironmentName --version-label YourVersionLabel
    # - aws elasticbeanstalk update-environment --application-name mySampleApp --environment-name mySampleApp-env --version-label $CI_COMMIT_SHORT_SHA
    # - aws elasticbeanstalk update-environment --application-name GreenGiants --environment-name GreenGiants --version-label  $CI_COMMIT_SHORT_SHA
  dependencies:
    - build

  when: manual


destroy:
  stage: destroy
  script:
    - cd terraform
    - rm -rf .terraform
    - terraform --version
    - terraform init
    - terraform plan -destroy -out destroyplan
    - terraform apply destroyplan
    
  when: manual